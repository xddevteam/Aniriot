def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.example.ani_riot"  // Wajib di Gradle 8+
    compileSdkVersion 34  // Gunakan versi terbaru untuk kompatibilitas JNI

    ndkVersion "25.2.9519653" // Pastikan menggunakan versi NDK yang stabil

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17  // Gunakan versi terbaru
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'  // Sesuaikan dengan Java 17 untuk performa lebih baik
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.ani_riot"
        minSdkVersion 21  // JNI lebih stabil di API 21+
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"  // Dukungan arsitektur JNI
        }
    }

    buildTypes {
        release {
            crunchPngs false
            minifyEnabled false  // Menonaktifkan R8 sementara jika ada error
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
